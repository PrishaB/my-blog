{
  
    
        "post0": {
            "title": "Title",
            "content": "",
            "url": "https://prishab.github.io/my-blog/2022/12/04/aboutme.html",
            "relUrl": "/2022/12/04/aboutme.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Final Blog",
            "content": "Incorrect Questions... . Question 5 . Question: Consider the following method. Which of the following is printed as a result of executing the following statement? System.out.println(mystery ( 6 ) ) ; | Correct Answer: [4, 7, 12, 19, 28, 39] | Explanation: This is the correct answer becaause the method mystery contains a loop that starts k at 1 and iterates, incrementing k by 1 until k exceeds n, which is 6. In each iteration, the Integer value k * k + 3 is added to the ArrayList seq. In the first iteration, when k is 1, the value 4 is added to the seq, which now contains {4}. In the second iteration, when k is 2, the value 7 is added to seq, which now contains {4, 7}. In the third iteration, when k is 3, the value 12 is added to seq, which now contains {4, 7, 12}. In the fourth iteration, when k is 4, the value 19 is added to seq, which now contains {4, 7, 12, 19}. In the fifth iteration, when k is 5, the value 28 is added to seq, which now contains {4, 7, 12, 19, 28}. In the sixth and final iteration, when k is 6, the value 39 is added to seq, which now contains {4, 7, 12, 19, 28, 39}. | . Question 21 . Question: Consider the following method, which is intended to return the element of a 2-dimensional array that is closest in value to a specified number, val. Which of the following could be used to replace / missing code / so that findClosest will work as intended? | Correct Answer: Math.abs (num - val) &lt; minDiff | Explanation: This is the correct answer because the algorithm uses nested enhanced for loops to iterate across all the elements in mat. The variable num is assigned the value of each element. If the positive difference between num and val is less than minDiff, num is the element of mat that is closest to val so far. | . Question 23 . Question: Consider the following instance variable and method. Assume that animals has been instantiated and initialized with the following contents. What will the contents of animals be as a result of calling manipulate? | Correct Answer: [&quot;bear&quot;, &quot;zebra&quot;, &quot;bass&quot;, &quot;cat&quot;, &quot;koala&quot;, &quot;baboon&quot;] | Explanation: This is the correct answer because list is an interface, which an ArrayList implements. Please note that List is no longer tested as part of the AP CSA exam and ArrayList will be used instead. The manipulate method contains a for loop with a loop control variable k that starts at the right most index of animals, decrements by 1 each time, until k is equal to 0. In the first iteration, when k is 5, if the element of animals at 5 (“baboon”) starts with a “b”, which it does, then this value is removed from the list and inserted at index 1. The list would then be {“bear”, “baboon”, “zebra”, “bass”, “cat”, “koala”}. In the second iteration, when k is 4, the element of animals at 4 (“cat”) does not start with a “b” and no changes are made to the list. In the third iteration, when k is 3, the element of animals at 3 (“bass”) starts with a “b”. This value is removed from the list and inserted at index 3. Since it was already at index 3, the list would not change. In the fourth iteration, when k is 2, the element of animals at 2 (“zebra”) does not start with a “b” and no changes are made to the list. In the fifth iteration, when k is 1, the element of animals at 1 (“baboon”) starts with a “b”. It is removed from the list and inserted at index 5. The list would then be {“bear”, “zebra”, “bass”, “cat”, “koala”, “baboon”}. Finally, k decrements to 0 which is not greater than 0 so the loop terminates. | . Question 28 . Question: Directions: Select the choice that best fits each statement. The following question(s) refer to the following method. Which of the following is true of method mystery? | Correct Answer: n will always be greater than 2 at // Point B. | Explanation: This is the correct answer because the while loop only iterates while n is greater than 2 and //Point B is in the body of the while loop prior to any change to the value of n. At this point, n will always be greater than 2. | . Question 30 . Question: Consider the following method. What value is returned as a result of the call scramble(&quot;compiler&quot;, 3)? | Correct Answer: &quot;ilercom&quot; | Explanation: This is the correct answer because the two parameter substring method returns the substring beginning at the first parameter and ending at the second parameter – 1. When word is assigned “compiler” and howFar is assigned 3, the value of word.substring(howFar + 1, word.length()) is “iler”. This is the substring of “compiler” beginning at 3 + 1 or 4 and ending at 8 – 1 or 7. The value of word.substring(0, howFar) is “com”. This is the substring of “compiler” beginning at 0 and ending at 2. The method returns “ilercom”. | . Question 33 . Question: Consider the following code segment. What is printed as a result of executing the code segment? | Correct Answer: Nothing is printed due to an infinite loop | Explanation: This is the correct answer since k is never changed in the body of the while loop, it will always be 1 and less than 4. In a boolean expression with or (||) if one of the two expressions is true, the expression is true. This will cause an infinite loop. (Forgot that || is and) | . General Reflections on Test . Need to read questions more thoroughly and review Java syntax a bit more | I got 6 wrong on the Test which would mean I scored 34/40...I can definitely do better especially since I had to search up a lot of the questions to get help on them | I should definitely look over all the units and review them. | . Links to Lessons . Week Unit . 1 | 2: OOP | . 2 | 3: Boolean and IF | . 2 | 4: Iteration | . 2 | 5: Writing Classes | . 3 | 6: Arrays | .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/11/07/finalblog.html",
            "relUrl": "/jupyter/2022/11/07/finalblog.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Iteration Lesson Hacks",
            "content": "Code for Random Number Guesser Game . Make a program where computer generates a number and user has to guess the right number. Iterate till correct guess and also give hints. . import java.util.*; import java.lang.Math; public class GuesserGame { private int secret; private boolean game = false; public void guess(){ secret = (int) (Math.random() * 500); int num = 0; int guesscount = 0; while (!game){ System.out.println(&quot;Guess a number 1-500: &quot;); // Scanner for int Scanner sc = new Scanner(System.in); num = sc.nextInt(); System.out.print(&quot;&quot; + num + &quot; - &quot;); // increment guesscount and check if guess is correct guesscount++; if (num == secret) { System.out.println(&quot;Congratulations! You got it right in &quot; + guesscount + &quot; guesses !&quot;); game = true; } else if (num &gt; secret) { System.out.println(&quot;Your guess is too high!&quot;); } else if (num &lt; secret) { System.out.println(&quot;Your guess is too low!&quot;); } } } public void guess(int num){ } } GuesserGame a = new GuesserGame(); a.guess(); . Guess a number 1-500: 4 - Your guess is too low! Guess a number 1-500: 100 - Your guess is too low! Guess a number 1-500: 300 - Your guess is too high! Guess a number 1-500: 200 - Your guess is too low! Guess a number 1-500: 250 - Your guess is too high! Guess a number 1-500: 225 - Your guess is too low! Guess a number 1-500: 240 - Your guess is too high! Guess a number 1-500: 230 - Your guess is too high! Guess a number 1-500: 227 - Congratulations! You got it right in 9 guesses ! .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/10/19/Iteration.html",
            "relUrl": "/jupyter/2022/10/19/Iteration.html",
            "date": " • Oct 19, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Boolean and IF Statements Lesson Hacks",
            "content": "2009 FRQ 3B . public int getChargeStartTime(int chargeTime) { int cheapestStartHour = 0; for(int startHour = 1; startHour &lt; rateTable.length; startHour++) if(getChargingCost(startHour, chargeTime) &lt; getChargingCost(cheapestStartHour, chargeTime)) cheapestStartHour = startHour; return cheapestStartHour; } . 2017 FRQ 1b . import java.util.*; public class Digits { private ArrayList&lt;Integer&gt; digitList; public Digits(int num) { digitList = new ArrayList&lt;Integer&gt;(); if (num==0){ digitList.add(new Integer(0)); } while (num &gt; 0) { digitList.add(0, new Integer(num % 10)); num /= 10; } } public boolean isStrictlyIncreasing() { boolean increase = true; for (int i = 0; i &lt; digitList.size() - 1; i++) { if (digitList.get(i).intValue() &gt;= digitList.get(i + 1).intValue()) { increase = false; return increase; } } return increase; } } System.out.println(new Digits(1356).isStrictlyIncreasing()); System.out.println(new Digits(1536).isStrictlyIncreasing()); . true false . 2019 FRQ 3B . public boolean isBalanced(ArrayList&lt;String&gt; delimiters) { int openDels = 0; int closeDels = 0; for (String del : delimiters) { if (del.equals(openDel)) { openDels++; } else { closeDels++; } if (closeDels &gt; openDels) { return false; } } return openDels == closeDels; } .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/10/18/BooleanLesson.html",
            "relUrl": "/jupyter/2022/10/18/BooleanLesson.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "OOP Lesson Hacks",
            "content": "Code for Goblin Game... . Had to add a hit chance feature... . import java.util.*; public class Goblin { private String name; private int HP; private int DMG; private double hitChance; public String getName() { return name; } public int getHP() { return HP; } public int getDMG() { return DMG; } public double getHitChance() { return hitChance; } public boolean isAlive() { if (this.HP &gt; 0) { return true; } else { return false; } } public void setName(String newName) { this.name = newName; } public void setHP(int newHP) { this.HP = newHP; } public void takeDMG(int takenDamage) { this.HP -= takenDamage; } public void setDMG(int newDMG) { this.DMG = newDMG; } public void setHitChance(double newHitChance) { this.hitChance = newHitChance; } } public class Duel { public static void fight(Goblin goblin1, Goblin goblin2) { while (goblin1.isAlive() &amp;&amp; goblin2.isAlive()) { // goblin1 hit chance tester if (Math.random() &lt; goblin2.getHitChance()) { goblin2.takeDMG(goblin2.getDMG()); System.out.println(goblin1.getName() + &quot; takes &quot; + goblin2.getDMG() + &quot; damage&quot;); } else { System.out.println(goblin2.getName() + &quot; missed!&quot;); } // print hp of goblin1 System.out.println(goblin1.getName() + &quot; HP: &quot; + goblin1.getHP()); if (!goblin1.isAlive()) { System.out.println(goblin1.getName() + &quot; has perished&quot;); break; } // if statement for goblin2 hit chance if (Math.random() &lt; goblin1.getHitChance()) { goblin2.takeDMG(goblin1.getDMG()); System.out.println(goblin2.getName() + &quot; takes &quot; + goblin1.getDMG() + &quot; damage&quot;); } else { System.out.println(goblin1.getName() + &quot; missed!&quot;); } // print hp of goblin2 System.out.println(goblin2.getName() + &quot; HP: &quot; + goblin2.getHP()); if (!goblin2.isAlive()) { System.out.println(goblin2.getName() + &quot; has perished&quot;); break; } } } public static void main(String[] args) { Goblin goblin1 = new Goblin(); goblin1.setName(&quot;Naruto&quot;); goblin1.setHP(12); goblin1.setDMG(2); goblin1.setHitChance(0.5); Goblin goblin2 = new Goblin(); goblin2.setName(&quot;Sasuke&quot;); goblin2.setHP(4); goblin2.setDMG(1); goblin2.setHitChance(0.75); fight(goblin1, goblin2); } } Duel.main(null); . Sasuke missed! Naruto HP: 12 Sasuke takes 2 damage Sasuke HP: 2 Naruto takes 1 damage Naruto HP: 12 Naruto missed! Sasuke HP: 1 Naruto takes 1 damage Naruto HP: 12 Naruto missed! Sasuke HP: 0 Sasuke has perished . 2021 FRQ 1 . // #1 public class WordMatch { String secret; public WordMatch(String secret) { this.secret = secret; } public void scoreGuess(String guess) { int counter = 0; // for loop for first substring index for (int i = 0; i &lt; this.secret.length(); i++){ // loop for second substring index for (int j = i + 1; j &lt; this.secret.length() + 1; j++) { // if statement if (guess.equals(this.secret.substring(i,j))) { counter++; } } } // Returning a point value int points = counter * guess.length() * guess.length(); System.out.println(&quot;&quot; + guess + &quot; = &quot; + points); // return points; } } WordMatch game = new WordMatch(&quot;mississippi&quot;); game.scoreGuess(&quot;i&quot;); game.scoreGuess(&quot;iss&quot;); game.scoreGuess(&quot;issipp&quot;); game.scoreGuess(&quot;mississippi&quot;); WordMatch game = new WordMatch(&quot;aaaabb&quot;); game.scoreGuess(&quot;a&quot;); game.scoreGuess(&quot;aa&quot;); game.scoreGuess(&quot;aaa&quot;); game.scoreGuess(&quot;aabb&quot;); game.scoreGuess(&quot;c&quot;); . i = 4 iss = 18 issipp = 36 mississippi = 121 a = 4 aa = 12 aaa = 18 aabb = 16 c = 0 .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/10/13/OOP.html",
            "relUrl": "/jupyter/2022/10/13/OOP.html",
            "date": " • Oct 13, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Writing Classes Lesson Hacks",
            "content": "2021 FRQ 1A . public class WordMatch { String secret; public WordMatch(String secret) { this.secret = secret; } public void scoreGuess(String guess) { int counter = 0; // for loop for first substring index for (int i = 0; i &lt; this.secret.length(); i++){ // loop for second substring index for (int j = i + 1; j &lt; this.secret.length() + 1; j++) { // if statement if (guess.equals(this.secret.substring(i,j))) { counter++; } } } // Returning a point value int points = counter * guess.length() * guess.length(); System.out.println(&quot;&quot; + guess + &quot; = &quot; + points); // return points; } } WordMatch game = new WordMatch(&quot;mississippi&quot;); game.scoreGuess(&quot;i&quot;); game.scoreGuess(&quot;iss&quot;); game.scoreGuess(&quot;issipp&quot;); game.scoreGuess(&quot;mississippi&quot;); WordMatch game = new WordMatch(&quot;aaaabb&quot;); game.scoreGuess(&quot;a&quot;); game.scoreGuess(&quot;aa&quot;); game.scoreGuess(&quot;aaa&quot;); game.scoreGuess(&quot;aabb&quot;); game.scoreGuess(&quot;c&quot;); . i = 4 iss = 18 issipp = 36 mississippi = 121 a = 4 aa = 12 aaa = 18 aabb = 16 c = 0 . 2021 FRQ 3A . public class ClubMembers { private ArrayList&lt;MemberInfo&gt; memberList; public void addMembers(String[] names, int gradYear) { for(name : names) { memberList.add(new MemberInfo(name, gradYear, true)); } } } .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/10/13/Classes.html",
            "relUrl": "/jupyter/2022/10/13/Classes.html",
            "date": " • Oct 13, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Arrays Lesson Hacks",
            "content": "Swap Last and First Elements . import java.util.Arrays; public class ArrayMethods { public static void main(String[] args) { int[] array_nums = {20, 30, 40}; System.out.println(&quot;Original Array: &quot;+Arrays.toString(array_nums)); int x = array_nums[0]; array_nums[0] = array_nums[array_nums.length-1]; array_nums[array_nums.length-1] = x; System.out.println(&quot;New array after swaping the first and last elements: &quot;+Arrays.toString(array_nums)); } } ArrayMethods.main(null); . Original Array: [20, 30, 40] New array after swaping the first and last elements: [40, 30, 20] . Check for Duplicates . import java.util.Arrays; public class Duplicates { public static void main(String[] args) { int[] my_array = {1, 2, 5, 5, 6, 6, 7, 2}; for (int i = 0; i &lt; my_array.length-1; i++) { for (int j = i+1; j &lt; my_array.length; j++) { if ((my_array[i] == my_array[j]) &amp;&amp; (i != j)) { System.out.println(&quot;Duplicate Element : &quot;+my_array[j]); } } } } } Duplicates.main(null); . Duplicate Element : 2 Duplicate Element : 5 Duplicate Element : 6 .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/10/13/Arrays.html",
            "relUrl": "/jupyter/2022/10/13/Arrays.html",
            "date": " • Oct 13, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Primitives Lesson",
            "content": ". . . .",
            "url": "https://prishab.github.io/my-blog/data/primitives",
            "relUrl": "/data/primitives",
            "date": " • Oct 12, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Fetch of Mental Health Sources",
            "content": "Articles Helpful Unhelpful .",
            "url": "https://prishab.github.io/my-blog/data/jokes",
            "relUrl": "/data/jokes",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Fetch of Backend Jokes",
            "content": "Joke HaHa Boohoo .",
            "url": "https://prishab.github.io/my-blog/data/jokes",
            "relUrl": "/data/jokes",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Arrays",
            "content": "import java.util.ArrayList; public class MeditationSuggestions { public static void main(String[] args) { testing(null); } public static void testing(String[] args) { // defining breathing exercises in meditation as an empty arraylist ArrayList&lt;String&gt; meditation = new ArrayList&lt;String&gt;(Arrays.asList(&quot;Box Breathing&quot;, &quot;Belly Breathing&quot;, &quot;4-7-8&quot;)); System.out.println(&quot;Original array:&quot;); System.out.println(&quot;&quot; + meditation); System.out.println(&quot; - &quot; + meditation.size() + &quot; techniques&quot;); System.out.println(&quot; -- &quot;); // Add 3 breathing exercises to meditation meditation.add(&quot;Rainbow Breathing&quot;); meditation.add(&quot;5 Finger Breathing&quot;); meditation.add(&quot;Diaphragm Breathing&quot;); // Printing result System.out.println(&quot;Example with adding to array:&quot;); System.out.println(&quot;&quot; + meditation); System.out.println(&quot; - &quot; + meditation.size() + &quot; techniques&quot;); System.out.println(&quot; -- &quot;); // Remove previously added exercises... meditation.remove(&quot;Rainbow Breathing&quot;); meditation.remove(&quot;5 Finger Breathing&quot;); meditation.remove(&quot;Diaphragm Breathing&quot;); // Printing result System.out.println(&quot;Example with removing from array:&quot;); System.out.println(&quot;&quot; + meditation); System.out.println(&quot; - &quot; + meditation.size() + &quot; techniques&quot;); System.out.println(&quot; -- &quot;); // Clearing all items in list meditation.clear(); // Printing Result System.out.println(&quot;Example with clearing array:&quot;); System.out.println(&quot;&quot; + meditation); System.out.println(&quot; - &quot; + meditation.size() + &quot; techniques&quot;); System.out.println(&quot;Is array empty? True or False: &quot; + meditation.isEmpty()); System.out.println(&quot; -- &quot;); if (meditation.isEmpty() == true) { meditation.add(&quot;Box breathing&quot;); meditation.add(&quot;Belly breathing&quot;); meditation.add(&quot;4-7-8&quot;); } System.out.println(&quot;Example with adding back to the array:&quot;); System.out.println(&quot;&quot; + meditation); System.out.println(&quot; - &quot; + meditation.size() + &quot; techniques&quot;); System.out.println(&quot; -- &quot;); } } MeditationSuggestions.main(null); . Original array: [Box Breathing, Belly Breathing, 4-7-8] - 3 techniques -- Example with adding to array: [Box Breathing, Belly Breathing, 4-7-8, Rainbow Breathing, 5 Finger Breathing, Diaphragm Breathing] - 6 techniques -- Example with removing from array: [Box Breathing, Belly Breathing, 4-7-8] - 3 techniques -- Example with clearing array: [] - 0 techniques Is array empty? True or False: true -- Example with adding back to the array: [Box breathing, Belly breathing, 4-7-8] - 3 techniques -- .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/10/07/arraystuff.html",
            "relUrl": "/jupyter/2022/10/07/arraystuff.html",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Title",
            "content": "import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://mental-health-info-api.p.rapidapi.com/news/thetimes&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;a8ea413753msh15f71679011b0bbp19bf3ejsn899c6392170a&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;mental-health-info-api.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); . [{&#34;title&#34;:&#34;UK NEWSFormer soldier’s coastal run raises £400,000 for mental health charityAfter surviving two bomb blasts in Iraq and Afghanistan, Paul Minter could be forgiven for wanting a quiet life. ...Tuesday October 04 2022, 5.00pm, The TimesKieran Gair&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/former-soldiers-coastal-run-raises-400-000-for-mental-health-charity-rx6r5p22r&#34;,&#34;source&#34;:&#34;thetimes&#34;},{&#34;title&#34;:&#34;GILLIAN BOWDITCHSuicidal children are being failed. The system is brokenA quarter of children referred for specialist help with mental health problems have either tried or thought about...Sunday September 04 2022, 12.01am, The Sunday TimesGillian Bowditch&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/suicidal-children-failed-broken-system-scotland-comment-xgtdp0h2b&#34;,&#34;source&#34;:&#34;thetimes&#34;},{&#34;title&#34;:&#34;HEALTHParents go private to get children mental health helpParents are increasingly turning to private health services for support with their children’s mental health...Monday August 08 2022, 12.01am, The TimesKat Lay, Health Editor&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/parents-go-private-to-get-children-mental-health-help-72fn9w53n&#34;,&#34;source&#34;:&#34;thetimes&#34;},{&#34;title&#34;:&#34;HEALTHChild mental health crisis ‘holds nation back’The mental health emergency among children is so profound that it threatens the country’s future prosperity, a...Saturday July 30 2022, 12.01am, The TimesJames Beal, Social Affairs Editor&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/child-mental-health-crisis-is-holding-england-back-5s8qpzclj&#34;,&#34;source&#34;:&#34;thetimes&#34;},{&#34;title&#34;:&#34;Children attempt suicide as they wait for NHS helpThousands of children and young adults have attempted suicide as a result of long waits for NHS mental health care...Thursday July 21 2022, 12.01am, The TimesKat Lay, Health Editor&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/children-attempt-suicide-as-they-wait-for-nhs-help-bgnhslbzc&#34;,&#34;source&#34;:&#34;thetimes&#34;},{&#34;title&#34;:&#34;Video IconHEALTHCost of living risks ‘pandemic-style mental health crisis’The cost of living crisis poses a pandemic-level threat to the nation’s mental wellbeing, one of Britain’s most...Monday June 20 2022, 2.45pm, The TimesKat Lay, Health Editor&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/cost-of-living-risks-pandemic-style-mental-health-crisis-lwwcxzlvb&#34;,&#34;source&#34;:&#34;thetimes&#34;},{&#34;title&#34;:&#34;HEALTHMental illness among young at record highA record number of children and young people are being treated for mental health problems. More than 420,000 were...Monday May 23 2022, 12.01am, The TimesCharlie Moloney&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/mental-illness-in-children-and-young-people-at-record-high-pz7qn3r2b&#34;,&#34;source&#34;:&#34;thetimes&#34;},{&#34;title&#34;:&#34;UK NEWSBecker ‘mentally strong and doing OK’ in jailBoris Becker is doing “OK” in prison and his mental health is good, but life inside Wandsworth jail is “not a...Wednesday May 04 2022, 9.30am, The TimesKieran Gair&#34;,&#34;url&#34;:&#34;https://www.thetimes.co.uk/article/boris-becker-mentally-strong-and-doing-ok-in-jail-says-wife-s68p2l386&#34;,&#34;source&#34;:&#34;thetimes&#34;}] . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://i-m-all-ears.p.rapidapi.com/?id=&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;a8ea413753msh15f71679011b0bbp19bf3ejsn899c6392170a&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;i-m-all-ears.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); . {&#34;count&#34;:16,&#34;next&#34;:&#34;https://fyp-api-ml.herokuapp.com/predict/?id=&amp;page=2&#34;,&#34;previous&#34;:null,&#34;results&#34;:[{&#34;id&#34;:&#34;4ad82ba3-9b39-4da9-ae1c-8393d58632e7&#34;,&#34;text&#34;:&#34;how do you break an anxious attachment style to make sure of a healthy possible relationship, without being avoidant? i noticed i send the first texts a lot and care a little too much about when this guy texts me back and when he doesn’t have the time to , i spiral. i don’t confront him about it because i know he’s got a lot going on at the moment and know that it’s just me overthinking because we still do talk and have a lot in common. we just started talking the beginning of the month and i feel like we’re getting to know eachother and we hung out for the first time a couple days ago and it was great ! i just don’t wanna send too many messages or try to hard because i’m very scared to scare him away. how do i let him prepare and let everything slowly work it’s way up to a relationship without completely just not messaging him or interacting immediately?&#34;,&#34;prediction&#34;:&#34;Type 3&#34;,&#34;score&#34;:&#34;100.00%&#34;,&#34;diagnosis&#34;:&#34;[&#39;Generalized Anxiety Disorder&#39;, &#39;Major Depressive Disorder&#39;, &#39;Hypomania&#39;, &#39;Adjustment Disorder&#39;, &#39;Suicidal Ideation Paranoid&#39;, &#39;Schizophrenia&#39;, &#39;Borderline Personality Disorder&#39;, &#39;Dissociative Disorder&#39;, &#39;Type-A Personality&#39;]&#34;,&#34;stressor&#34;:&#34;[&#39;Work Stress&#39;, &#39;Companionship Issues&#39;, &#39;Public Expectation&#39;, &#39;Underlying Unresolved Health Issues&#39;, &#39;Hereditary Traits&#39;]&#34;,&#34;symptom&#34;:&#34;[&#39;Anxiety&#39;, &#39;Helplessness&#39;, &#39;Emptiness&#39;, &#39;Loss of Motivation&#39;, &#39;Anhedonia (Loss of Passion)&#39;, &#39;Fatigue&#39;, &#39;Isolation&#39;, &#39;Suicidal Thoughts&#39;, &#39;Paranoia&#39;, &#39;Hearing Voices&#39;, &#39;Hallucination&#39;, &#39;Comptetitiveness&#39;]&#34;},{&#34;id&#34;:&#34;76474528-5d72-4e59-96fe-bd0dd9b974bb&#34;,&#34;text&#34;:&#34;I am depressed. Please don&#39;t scroll down. r nI&#39;m 24 years old. I had a pretty normal life. My father passed away when I was in 4th standard. My mom is always there for me. She helped me a lot. Now, I&#39;m way past the time to get a job. My mom is pressuring me. I have failed my college, I couldn&#39;t pass the failed subjects. All my friends are successful and I got left out, which is my fault. I failed because I took the physics to major and I&#39;m not at all good in maths. Everyone says to finish it. I don&#39;t want to because I feel like a loser. Mom is forcing me to get a government job(I&#39;m from India, it&#39;s a big thing here). Im trying to get a job, but nothing is working out. I always feel like I&#39;m going to die. I don&#39;t think my mom will support me in getting therapy. I&#39;m living with her. She says a job is necessary to get married. I&#39;m horny and hungry when I am at home. Sometimes I get so sad, I feel like I don&#39;t exist at all. This is not a rant. Still living with mom and trying to pass an exam for government jobs.&#34;,&#34;prediction&#34;:&#34;Type 2&#34;,&#34;score&#34;:&#34;93.70%&#34;,&#34;diagnosis&#34;:&#34;[&#39;Generalized Anxiety Disorder&#39;, &#39;Major Depressive Disorder&#39;, &#39;Hypomania&#39;, &#39;Adjustment Disorder&#39;, &#39;Bipolar Disorder&#39;]&#34;,&#34;stressor&#34;:&#34;[&#39;Work Stress&#39;, &#39;Companionship Issues&#39;]&#34;,&#34;symptom&#34;:&#34;[&#39;Anxiety&#39;, &#39;Helplessness&#39;, &#39;Emptiness&#39;, &#39;Loss of Motivation&#39;, &#39;Anhedonia (Loss of Passion)&#39;, &#39;Fatigue&#39;, &#39;Isolation&#39;, &#39;Attachment Issues&#39;]&#34;},{&#34;id&#34;:&#34;f047eb4a-7a85-42de-8a32-737df409de7a&#34;,&#34;text&#34;:&#34;How I Tricked Myself Into Taking Care of Myself r nBasically, I tricked myself into taking care of myself by taking care of other things. In undergrad I had a betta fish, and now in my apartment I have houseplants. And I mean I have over 40 of them. When I get super depressed, the first things to go are personal hygiene and eating, and it takes me about an hour to decide if I want to get out of bed or not, and if I even can. But! Can&#39;t stay in bed because I don&#39;t want my plants to die! Couldn&#39;t stay in bed because I had to get up and clean my fish tank and feed her! And once I&#39;m out of bed, I guess I can make myself brush my teeth and try to eat something small. Maybe I can make a coffee and I can go out and sit on my balcony for a while. Maybe I can even shower and clean a little. r n r nI&#39;m not saying this will work for everyone, but it&#39;s been a pretty decent help for me :)&#34;,&#34;prediction&#34;:&#34;Type 2&#34;,&#34;score&#34;:&#34;99.79%&#34;,&#34;diagnosis&#34;:&#34;[&#39;Generalized Anxiety Disorder&#39;, &#39;Major Depressive Disorder&#39;, &#39;Hypomania&#39;, &#39;Adjustment Disorder&#39;, &#39;Bipolar Disorder&#39;]&#34;,&#34;stressor&#34;:&#34;[&#39;Work Stress&#39;, &#39;Companionship Issues&#39;]&#34;,&#34;symptom&#34;:&#34;[&#39;Anxiety&#39;, &#39;Helplessness&#39;, &#39;Emptiness&#39;, &#39;Loss of Motivation&#39;, &#39;Anhedonia (Loss of Passion)&#39;, &#39;Fatigue&#39;, &#39;Isolation&#39;, &#39;Attachment Issues&#39;]&#34;}]} .",
            "url": "https://prishab.github.io/my-blog/2022/10/05/api.html",
            "relUrl": "/2022/10/05/api.html",
            "date": " • Oct 5, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Title",
            "content": "import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageIOTest { public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = &quot;MonaLisa&quot;; String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;Success&quot;); } } ImageIOTest.main(null); . javax.imageio.IIOException: Can&#39;t read input file! at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308) at REPL.$JShell$16C$ImageIOTest.main($JShell$16C.java:49) at REPL.$JShell$42.do_it$($JShell$42.java:36) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.lang.reflect.Method.invoke(Method.java:566) at io.github.spencerpark.ijava.execution.IJavaExecutionControl.lambda$execute$1(IJavaExecutionControl.java:95) at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at java.base/java.lang.Thread.run(Thread.java:829) . Success . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i+=2) { for (int j = 0; j &lt; img.getWidth(); j+=1) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 220) { str = &quot;.&quot;; } else if (g &gt;= 220) { str = &quot;-&quot;; } else if (g &gt;= 210) { str = &quot;~&quot;; } else if (g &gt;= 200) { str = &quot;;&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 180) { str = &quot;|&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 160) { str = &quot;[&quot;; } else if (g &gt;= 150) { str = &quot;1&quot;; } else if (g &gt;= 140) { str = &quot;3&quot;; } else if (g &gt;= 130) { str = &quot;$&quot;; } else if (g &gt;= 120) { str = &quot;R&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); } } Pics.main(null); . Original: 0 0x0 images/MonaLisa.png Scaled: 0 0x0 images/MonaLisa.png . java.lang.NullPointerException: null at Pics.convertToAscii(#34:1) at Pics.main(#34:1) at .(#45:1) .",
            "url": "https://prishab.github.io/my-blog/2022/10/03/asciithing.html",
            "relUrl": "/2022/10/03/asciithing.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Week of 9/20",
            "content": "/* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Fibo in a For Loop Format . We used a for loop to loop through and create a fibonacci sequence. A for loop will loop through a program for as many times listed in the initial condition. . //Using For Loop public class FibonacciFor extends Fibo { public static void main(String[] args) { // Set it to the number of elements you want in the Fibonacci Series int maxNumber = 10; int previousNumber = 0; int nextNumber = 1; System.out.print(&quot;Fibonacci Series of &quot;+maxNumber+&quot; numbers:&quot;); for (int i = 1; i &lt;= maxNumber; ++i) { System.out.print(previousNumber+&quot; &quot;); /* On each iteration, we are assigning second number * to the first number and assigning the sum of last two * numbers to the second number */ int sum = previousNumber + nextNumber; previousNumber = nextNumber; nextNumber = sum; } Fibo fib = new Fibo(); fib.print(); } } FibonacciFor.main(null); . Fibonacci Series of 10 numbers:0 1 1 2 3 5 8 13 21 34 Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Fibonacci in a While Loop Format . We extended Fibo to create a while loop to loop through and create a fibonacci sequence. The while loop will keep looping as long as a certain boolean value is met. . //Using While Loop public class FibonacciWhile extends Fibo { public static void main(String[] args) { int maxNumber = 10, previousNumber = 0, nextNumber = 1; System.out.print(&quot;Fibonacci Series of &quot;+maxNumber+&quot; numbers:&quot;); int i=1; while(i &lt;= maxNumber) { System.out.print(previousNumber+&quot; &quot;); int sum = previousNumber + nextNumber; previousNumber = nextNumber; nextNumber = sum; i++; } Fibo fib = new Fibo(); fib.print(); } } FibonacciWhile.main(null); . Fibonacci Series of 10 numbers:0 1 1 2 3 5 8 13 21 34 Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Fibonacci Series using Recursion . After extending Fibo, we used recursion to loop through and create a fibonacci sequence. A recursion loop divides an overarching program into mini-programs that can be used to create some kind of output. . //Using Recursion public class FibonacciRecursion extends Fibo { public static int fibonacciRecursion(int n){ if(n == 0){ return 0; } if(n == 1 || n == 2){ return 1; } return fibonacciRecursion(n-2) + fibonacciRecursion(n-1); } public static void main(String args[]) { int maxNumber = 10; System.out.print(&quot;Fibonacci Series of &quot;+maxNumber+&quot; numbers: &quot;); for(int i = 0; i &lt; maxNumber; i++){ System.out.print(fibonacciRecursion(i) +&quot; &quot;); } Fibo fib = new Fibo(); fib.print(); } } FibonacciRecursion.main(null); . Fibonacci Series of 10 numbers: 0 1 1 2 3 5 8 13 21 34 Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/09/24/fibo.html",
            "relUrl": "/jupyter/2022/09/24/fibo.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Week of 9/20",
            "content": "Project Idea . Site dedicated to helping Del Norte students manage their mental health better. . // Java program to print greeting class greet { public static void main(String[] args) { System.out.println(&quot;Welcome to Health.ly!&quot;); // line that we are printing } } greet.main(null); // calling the class to use . Welcome to Health.ly! . Meet our team! . Using an array to print members of the team and their jobs on the team. . // Array with list of members and positions String[][] positions = {{&quot;Saumya&quot;, &quot;Scrum Leader&quot;},{&quot;Serafina&quot;, &quot;Deployment&quot;}, {&quot;Armaan&quot;, &quot;Frontend&quot;}, {&quot;Prisha&quot;, &quot;Backend&quot;}}; // Printing out the array values side by side System.out.println(Arrays.deepToString(positions)); . [[Saumya, Scrum Leader], [Serafina, Deployment], [Armaan, Frontend], [Prisha, Backend]] .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/09/24/JavaStuff.html",
            "relUrl": "/jupyter/2022/09/24/JavaStuff.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Title",
            "content": "/* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 1 { &quot; Monkey 1&quot;, &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }, //Monkey 2 { &quot; Monkey 2&quot;, &quot; ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 3 { &quot; Monkey 3&quot;, &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 4 { &quot; Monkey 4&quot;, &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }, //Monkey 5 { &quot; Monkey 5&quot;, &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; int rowCount = 0; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); for (int col = 0; col &lt; monkeys[rowCount].length; col++) { for (int row = 0; row &lt; monkeyCount; row++) { //cycles through &quot;cells&quot; of 2d array // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); } //this new line gives separation between stanza of poem System.out.println(); } rowCount += 1; //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 5 little monkeys jumping on the bed... Monkey 1 Monkey 2 Monkey 3 Monkey 4 Monkey 5 ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ (◕‿◕✿) _⏄_/ _⎏_/ _⎐_/ _⍾_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ==4== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ _/ _ 4 little monkeys jumping on the bed... Monkey 1 Monkey 2 Monkey 3 Monkey 4 ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ ʕ ͡° ͜ʖ ° ͡ʔ _⏄_/ _⎏_/ _⎐_/ _⍾_/ --0-- ++1++ &lt;-2-&gt; ==3== ⎛ ⎞ ⌋ ⌊ 〈 〉 _/ _ 3 little monkeys jumping on the bed... Monkey 1 Monkey 2 Monkey 3 ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ ʕ(▀ ⍡ ▀)ʔ _⏄_/ _⎏_/ _⎐_/ --0-- ++1++ &lt;-2-&gt; ⎛ ⎞ ⌋ ⌊ 〈 〉 2 little monkeys jumping on the bed... Monkey 1 Monkey 2 ʕง ͠° ͟ل͜ ͡°)ʔ ʕ༼ ◕_◕ ༽ʔ _⏄_/ _⎏_/ --0-- ++1++ ⎛ ⎞ ⌋ ⌊ 1 little monkeys jumping on the bed... Monkey 1 ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END . import java.util.Scanner; public class MultiplicationTable2 { private static Scanner sc; public static void main(String[] args) { int number; sc = new Scanner(System.in); System.out.print(&quot; Please Enter any Number: &quot;); number = sc.nextInt(); MultiTable(number); } public static void MultiTable(int num) { int i, j; for(i = num; i &lt; 10; i++) { for(j = 1; j &lt;= 10; j++) { System.out.println(i +&quot; * &quot; + j + &quot; = &quot; + i * j); } System.out.println(&quot;=================&quot;); } } } MultiplicationTable2.main(null); . Please Enter any Number: 7 * 1 = 7 7 * 2 = 14 7 * 3 = 21 7 * 4 = 28 7 * 5 = 35 7 * 6 = 42 7 * 7 = 49 7 * 8 = 56 7 * 9 = 63 7 * 10 = 70 ================= 8 * 1 = 8 8 * 2 = 16 8 * 3 = 24 8 * 4 = 32 8 * 5 = 40 8 * 6 = 48 8 * 7 = 56 8 * 8 = 64 8 * 9 = 72 8 * 10 = 80 ================= 9 * 1 = 9 9 * 2 = 18 9 * 3 = 27 9 * 4 = 36 9 * 5 = 45 9 * 6 = 54 9 * 7 = 63 9 * 8 = 72 9 * 9 = 81 9 * 10 = 90 ================= .",
            "url": "https://prishab.github.io/my-blog/2022/09/20/asciistuff.html",
            "relUrl": "/2022/09/20/asciistuff.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Focus and Skills",
            "content": "Takeaways from vid . Important to prioritize mental, physical, and emotional health | Surprised me even college students feel the same way...usually expected to be better at balance by adulthood | Take time to do things you love in life, not just academic stuff | Take the time to be with others because humans are social beings anywho | . Things I&#39;m grateful for . My life in general, it&#39;s very privileged tbh | My family | My friends | My body | The place I live in | . Goals . Prepare for my classes in advance so I&#39;m not stressed and overwhelmed in the last minute | Spend more time with friends and family (in person not online) | Try to sleep more regularly...rn I sleep at the most random times | Spend more time offline | . Thank you Note . Grateful to my parents for constantly checking in on my mental health and making sure I&#39;m not too overwhelmed with work. They are always there to help keep me on track and even though I may think it&#39;s nagging I know they are just doing it for my sake anyway. .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/09/12/videonotes.html",
            "relUrl": "/jupyter/2022/09/12/videonotes.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Boolean Expressions and If-Else Statements",
            "content": "Booleans . Logical data types that only have true or false values. In java it is usually used to determine which sections of code to execute. . If Statements and other Conditionals . Will check boolean value and execute based on whether the conditions is met or not. The If statement is used to check the first condition and if that requirement is met, then it will execute the command. The else statement follows after and executes another command in case the original requirement for the if statement was not met. The else if comes in between and shows another condition to meet and will run if it is met. . if (score &gt;= 90) { grade = &#39;A&#39;; } else if (score &gt;= 80) { grade = &#39;B&#39;; } else if (score &gt;= 70) { grade = &#39;C&#39;; } else if (score &gt;= 60) { grade = &#39;D&#39;; } else { grade = &#39;F&#39; } . De Morgan&#39;s Law . Kind of like probability in stats, it is used to help you add multiple conditions to your boolean value. You can use || to represent &quot;or&quot; and &amp;&amp; to represent &quot;and&quot;. . boolean cat = true; boolean spotted = false; if (!(cat &amp;&amp; spotted)){ System.out.println(&quot;You have a spotted cat&quot;); } else{ System.out.println(&quot;Your cat is not spotted&quot;); } . You have a spotted cat .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/09/12/conditionals.html",
            "relUrl": "/jupyter/2022/09/12/conditionals.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Documentation/Analysis",
            "content": "Class . basic building block | must be given keyword &quot;class&quot; in java (at the top) followed by class name | followed by methods and variables | . | class declaration includes: Modifiers: A class can be public or has default access. | class keyword: The class keyword is used to create a class. | Class name: The name must begin with an initial letter (capitalized by convention). | Superclass (if any): The name of the class&#39;s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent. | Interfaces (if any): A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface. | Body: The class body surrounded by braces, { }. | . | . //to create a class public class Main { int x = 5; } . //multiple classes class Second { public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } . Instance of a Object . non-static variables defined outside any method, constructor, block, etc. | has a separate copy or instance | belongs to a class | instance variables are in the class but outside methods | have different defaults that are later specified | can only be used when an object is made | is destroyed with the object it&#39;s assoc. with | not necessary to be initialized | accessible in the same class that declares them | cannot be declared static, abstract, etc. only final and transient | can be any fof the four java modifiers: private, public, protected, and default | . | include: boolean, byte, short, int, double, float, long, Object, char | . //to create an object public class Main { int x = 5; public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } . //multiple objects public class Main { int x = 5; public static void main(String[] args) { Main myObj1 = new Main(); // Object 1 Main myObj2 = new Main(); // Object 2 System.out.println(myObj1.x); System.out.println(myObj2.x); } } . Methods . a block of code only running when called | used to pass data, (parameters) | perform actions, known also as functions | reuse code and define the code once to use repetitively | in the example below: myMethod() = name of method | static --&gt; means that the method belongs to the Main class and not an object of the Main class. | void --&gt; this method doesn&#39;t return a value | . | to call a method, write the method&#39;s name w/ 2 parentheses and a semicolon | . //basic method syntax public class Main { static void myMethod() { // code to be executed } } . //calling a method public class Main { static void myMethod() { System.out.println(&quot;I just got hired!&quot;); } public static void main(String[] args) { myMethod(); } } // Outputs &quot;I just got hired!&quot; . Object Mutation . faults inserted into a program that distinguish the mutant from the original program | certain objects are mutable vs. immutable | strings are immutable; will always rep. the same string but StringBuilder is mutable; it has methods to delete, insert, or replace characters | . | mutable types seem more powerful than immutable ones mutable is safer from bugs than immutable | easier to understand than immutable | . | . Console vs. GUI vs. Code.org . console: console class in java provides methods to access character-based console device | GUI = graphical user interface; graphical representation where users interact w/ software/devices through clickable icons | CLI: console/text/character based representation where user types commands into a terminal to operate or navigate the software/devices | Code.org: thus is CLI; typing of commands, character-based | .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/09/05/documentanalysis.html",
            "relUrl": "/jupyter/2022/09/05/documentanalysis.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Title",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); // map.put(&quot;What year was the DOI signed?&quot;, &quot;1776&quot;); // map.put(&quot;What saved the capitol during the War of 1812?&quot;, &quot;Thunderstorm&quot;); // map.put(&quot;Who was the 2nd President of the US?&quot;, &quot;John Adams&quot;); public final String[][] QUESTIONS = { // 2D Array of ANSI Terminal Colors {&quot;What year was the DOI signed?&quot;, &quot;1776&quot;}, {&quot;What saved the capitol during the War of 1812?&quot;, &quot;Thunderstorm&quot;}, {&quot;Who was the 2nd President of the US?&quot;, &quot;John Adams&quot;}, {&quot;Who was mainly involved in the corrupt bargain?&quot;, &quot;John Qunicy Adams&quot;}, }; // 2D column location for data public final int TITLE = 0; public final int VALUE = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - History Flashcards (Prisha Boreddy)&quot;); System.out.println(&quot;5 - GPA Calculator (Prisha Boreddy)&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } private void calculator() { Scanner input = new Scanner(System.in); String letterGrades = &quot;&quot;; double weight; double sum = 0.00; int num = 1; double classes = 0; System.out.print(&quot;This is a simple GPA calculator. After being asked to put in the number of classes you are taking, please respond to the following prompts with a capital letter.&quot;); System.out.print(&quot;Number of classes you are taking this trimester: n&quot;); classes = input.nextInt(); for (int i = 0; i &lt; classes; i++) { Scanner input2 = new Scanner(System.in); System.out.print(&quot;What is your Grade in Period &quot; + num + &quot;? &gt; &quot;); letterGrades = input2.nextLine(); System.out.print(letterGrades + &quot; n&quot;); if (letterGrades.equals(&quot;A&quot;)){ weight = 4.00; sum += weight; } else if (letterGrades.equals(&quot;B&quot;)){ weight = 3.00; sum += weight; } else if (letterGrades.equals(&quot;C&quot;)){ weight = 2.00; sum += weight; } else if (letterGrades.equals(&quot;D&quot;)){ weight = 1.00; sum += weight; } else if (letterGrades.equals(&quot;F&quot;)){ weight = 0.00; sum += weight; } else { System.out.println(&quot;Improper syntax&quot;); break; } num = num + 1; } double GPA = sum / classes; System.out.println(&quot;Your Un-weighted GPA is:&quot; + GPA); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; case 4: for(int i = 0; i &lt; QUESTIONS.length; i++) // loop through COLORS array System.out.print(QUESTIONS[i][TITLE]); for(int i = 0; i &lt; QUESTIONS.length; i++) // loop through COLORS array System.out.print(QUESTIONS[i][VALUE]); // for(Entry&lt;Integer, String&gt; entry : map.entrySet()) // { //print keys and values // System.out.println(entry.getKey() + &quot; : &quot; +entry.getValue()); // } break; case 5: calculator(); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - History Flashcards (Prisha Boreddy) 5 - GPA Calculator (Prisha Boreddy) 0 - Quit - 4: What year was the DOI signed?What saved the capitol during the War of 1812?Who was the 2nd President of the US?Who was mainly involved in the corrupt bargain?1776ThunderstormJohn AdamsJohn Qunicy Adams 5: This is a simple GPA calculator. After being asked to put in the number of classes you are taking, please respond to the following prompts with a capital letter.Number of classes you are taking this trimester: What is your Grade in Period 1? &gt; A What is your Grade in Period 2? &gt; A What is your Grade in Period 3? &gt; A What is your Grade in Period 4? &gt; A Your Un-weighted GPA is:4.0 0: Goodbye, World! .",
            "url": "https://prishab.github.io/my-blog/2022/09/04/study.html",
            "relUrl": "/2022/09/04/study.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Title",
            "content": "",
            "url": "https://prishab.github.io/my-blog/2022/08/30/aboutme.html",
            "relUrl": "/2022/08/30/aboutme.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Array List Week 7",
            "content": "Notes . 7.1 Intro to ArrayLists . Arrays: Static, Static (fixed size), Fundamental java feature, An object with no methods, Not as flexible, Can store more primitive data, Slightly slower than Arrays | ArrayLists: Dynamic (can change size) Part of a framework, A class with many methods, Designed to be more flexible, Store object references, Can only be used with an import statement | . Primitive Data Types: . boolean | char | double | int | . Wrapper Class Data Types (Store the primitive values as objects) . Boolean | Character | Double | Integer | . 7.2 ArrayList Methods . size(); --&gt; Returns the number of elements in the list add(obj); --&gt; Adds element at the end add(index, object); --&gt; Adds element at specific index remove(index); --&gt; Removes element from specific index set(index, object); --&gt; Replaces element at index with new object get(index); --&gt; Returns element at index . 7.3 Traversing ArrayLists . 2 ways --&gt; for loops and enhanced for loops | use get() instead of bracket notation for getting an element of an arraylist | use size() to find number of elements in arraylist instead of using .length | . 7.4 Developing Algorithms Using ArrayLists . They can... . Modify array values | Find the max value | Find the min value | . 7.5 Searching . Important to remember... . When looking at int values, the == operator should be used. | When searching for a double value, we need to make sure the value is close enough by doing some math. | Object instances should always use the .equals(otherThing) method to check for a match. | . 7.6 Sorting . Selection sort identifies either the maximum or minimum of the compared values and iterates over the structure checking if the item stored at the index matches the condition, if so, it will swap the value stored at the index and continue. | The insertion sort is characterized by building a sorted structure as it proceeds. It inserts each value it finds at the appropriate location in the data structure. This is often accomplished by using a while loop as the inner loop. | . 7.7 Ethical Issues around Data Collection . More data --&gt; more to protect --&gt; more likely leak will happen | Delete things you don&#39;t need anymore | Ensure important data is encrypted | . Hack Number 1 . Experimenting with arrayList . // HACK!!!! // Create an arrayList and use one of the cool methods for it import java.util.ArrayList; public class hack1 { public static void main (String[] args) { ArrayList&lt;String&gt; omoriChara = new ArrayList&lt;String&gt;(Arrays.asList(&quot;Mari&quot;, &quot;Hero&quot;, &quot;Aubrey&quot;, &quot;Basil&quot;, &quot;Kel&quot;, &quot;Sunny&quot;)); System.out.println(&quot;There are &quot; + omoriChara.size() + &quot; characters still alive&quot;); omoriChara.remove(&quot;Mari&quot;); System.out.println(&quot;There are now &quot; + omoriChara.size() + &quot; characters still alive&quot;); omoriChara.add(&quot;Something&quot;); System.out.println(&quot;There are now &quot; + omoriChara.size() + &quot; characters in the game&quot;); } } hack1.main(null); . There are 6 characters still alive There are now 5 characters still alive There are now 6 characters in the game . Hack Number 2 . Removing red terms . import java.util.ArrayList; ArrayList&lt;String&gt; color = new ArrayList&lt;String&gt;(); color.add(&quot;red apple&quot;); color.add(&quot;green box&quot;); color.add(&quot;blue water&quot;); color.add(&quot;red panda&quot;); for(int i = color.size() - 1; i &gt;= 0; i--) { if(color.get(i).contains(&quot;red&quot;)) { color.remove(i);} } System.out.println(color); /*/ using if(color.get(i).contains(&quot;red&quot;)) iterate through the arraylist and remove all elements that contain the word red in them /*/ . [green box, blue water] . Hack Number 3 . Finding the sum . // find the sum of the elements in the arraylist ArrayList&lt;Integer&gt; num = new ArrayList&lt;Integer&gt;(); num.add(5); num.add(1); num.add(3); int sum = 0; for (int number: num) { sum += number; } System.out.print(sum); . 9 . Quiz . I took it like twice but I forgot to screenshot it so, I really hope you accept my word ;-; .",
            "url": "https://prishab.github.io/my-blog/jupyter/2022/05/12/ArrayLists.html",
            "relUrl": "/jupyter/2022/05/12/ArrayLists.html",
            "date": " • May 12, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Hacks Attempts",
            "content": "public class GradeCalculator { // Created a double wrapper class (object) ArrayList&lt;Double&gt; grades; // Create a constructor that initializes ArrayList and called enterGrades method public GradeCalculator() { this.grades = new ArrayList&lt;&gt;(); this.enterGrades(); } // double requires test for zero versus threshold, DO NOT compare to Zero private boolean isZero(double value){ double threshold = 0.001; return value &gt;= -threshold &amp;&amp; value &lt;= threshold; } // enterGrades input method using scanner private void enterGrades() { Scanner input; while (true) { input = new Scanner(System.in); System.out.print(&quot;Enter a double, 0 to exit: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); if (isZero(sampleInputDouble)) break; // exit loop on isZero else this.grades.add(sampleInputDouble); // adding to object, ArrayList grades } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } } // average calculation public double average() { double total = 0; // running total for (double num : this.grades) { // enhanced for loop total += num; // shortcut add and assign operator } return (total / this.grades.size()); // double math, ArrayList grades object maintains its size } // static main method, used as driver and tester public static void main(String[] args) { GradeCalculator grades = new GradeCalculator(); // calls constructor, creates object, which calls enterGrades System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); // format used to standardize to two decimal points } } // IJava activation GradeCalculator.main(null); . Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 5.0 Enter a double, 0 to exit: 6.0 Enter a double, 0 to exit: 25.0 Enter a double, 0 to exit: .",
            "url": "https://prishab.github.io/my-blog/jupyter/2020/08/28/practice.html",
            "relUrl": "/jupyter/2020/08/28/practice.html",
            "date": " • Aug 28, 2020"
        }
        
    
  
    
        ,"post23": {
            "title": "Blog Notes",
            "content": "Issue with updating notebook - 08/28 Resolved by allowing some time before hitting save | . | .",
            "url": "https://prishab.github.io/my-blog/jupyter/2020/08/28/blog-notes.html",
            "relUrl": "/jupyter/2020/08/28/blog-notes.html",
            "date": " • Aug 28, 2020"
        }
        
    
  
    
        ,"post24": {
            "title": "Primitives Notebook 01",
            "content": "Fastpages Primitives Notes/Learning Captured . set of data types | in CSA exam; consist of int, boolean, double int; integer | boolean; true/false | double; stores floating pt numbers | . | includes variables | . public class DefinePrimitives { public static void main(String[] args) { int anInt = 100; double aDouble = 89.9; boolean aBoolean = true; // not primitives but essential String aString = &quot;Hello, World!&quot;; // wrapper class shortcut assignment String aStringFormal = new String(&quot;Greetings, World!&quot;); System.out.println(&quot;anInt: &quot; + anInt); System.out.println(&quot;aDouble: &quot; + aDouble); System.out.println(&quot;aBoolean: &quot; + aBoolean); System.out.println(&quot;aString: &quot; + aString); System.out.println(&quot;aStringFormal: &quot; + aStringFormal); } } DefinePrimitives.main(null) . anInt: 100 aDouble: 89.9 aBoolean: true aString: Hello, World! aStringFormal: Greetings, World! .",
            "url": "https://prishab.github.io/my-blog/jupyter/2020/08/28/First-Primitive.html",
            "relUrl": "/jupyter/2020/08/28/First-Primitive.html",
            "date": " • Aug 28, 2020"
        }
        
    
  
    
        ,"post25": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://prishab.github.io/my-blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post26": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://prishab.github.io/my-blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Calculator Starters",
          "content": "| Menu | Calculator | Snake Game | . 0 1 2 3 + 4 5 6 - 7 8 9 * A/C 0 . =",
          "url": "https://prishab.github.io/my-blog/frontend12/calculator",
          "relUrl": "/frontend12/calculator",
          "date": ""
      }
      
  

  

  
      ,"page2": {
          "title": "About",
          "content": "This site is built with fastpages . Key Links . GitHub Repos: github.com/nighthawkcoders, Spring Portfolio Template | AWS Deployments: csa.nighthawkcodingsociety.com | Slack: Join Link | 2021-2022 Archives: Fall, Early Winter, Late Winter, Spring | . Students . Name ID Age .",
          "url": "https://prishab.github.io/my-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "Mental Health News Articles",
          "content": "Copy and Paste the URLs into a new tab to view the articles. . Quote Author Category .",
          "url": "https://prishab.github.io/my-blog/api/",
          "relUrl": "/api/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://prishab.github.io/my-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}